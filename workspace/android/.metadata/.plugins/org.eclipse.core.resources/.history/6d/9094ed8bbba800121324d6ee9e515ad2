package com.tsegaab.besso;

import java.util.Locale;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.widget.CompoundButton;
import android.widget.Switch;
import android.widget.Toast;
import android.speech.tts.TextToSpeech;

public class Control extends Activity implements
		CompoundButton.OnCheckedChangeListener {
	Switch livingSw, bedSw, outDoorSw;
	AsyncTask<Void, Void, Void> changeStateTask;
	public static String Message;
	public static String STATUS;
	private String[] cStatus;
	TextToSpeech tts;
	CheckConnection cd;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.control_activity);
		livingSw = (Switch) findViewById(R.id.living_room_swch);
		bedSw = (Switch) findViewById(R.id.bed_room_swch);
		outDoorSw = (Switch) findViewById(R.id.out_door_swch);
		livingSw.setOnCheckedChangeListener(this);
		bedSw.setOnCheckedChangeListener(this);
		outDoorSw.setOnCheckedChangeListener(this);
		cd = new CheckConnection(getApplicationContext());
		// get sent current status from center class
		Intent i = getIntent();
		/*
		 * cStatus = i.getStringArrayExtra("sentStatus"); // set status to
		 * switch objects if (cStatus[0].equals("1")){
		 * livingSw.setActivated(true); } else { livingSw.setActivated(false); }
		 * if (cStatus[1].equals("1")){ bedSw.setActivated(true); } else {
		 * bedSw.setActivated(false); } if (cStatus[2].equals("1")){
		 * outDoorSw.setActivated(true); } else { outDoorSw.setActivated(false);
		 * }
		 */

		tts = new TextToSpeech(Control.this, new TextToSpeech.OnInitListener() {

			@Override
			public void onInit(int status) {
				if (status != TextToSpeech.ERROR) {
					tts.setLanguage(Locale.US);

				}

			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
		final Context context = this;
		final String state = (isChecked ? "on" : "off");
		// TODO Auto-generated method stub
		
		if (!cd.isConnectingToInternet()) {
			// Internet Connection is not present
			tts.speak(Message + " Setting Living room light " + state,
					TextToSpeech.QUEUE_FLUSH, null);
			return;
		}
		if (buttonView == livingSw) {
			changeStateTask = new AsyncTask<Void, Void, Void>() {

				@Override
				protected Void doInBackground(Void... params) {
					// Register on our server
					// On server creates a new user
					ServerSide.roomLight(context, "living_room", state);
					return null;
				}

				@Override
				protected void onPostExecute(Void result) {
					changeStateTask = null;
				}

			};
			changeStateTask.execute(null, null, null);
			Toast.makeText(this,
					Message + " Setting Living room light " + state,
					Toast.LENGTH_LONG).show();
		}
		if (buttonView == bedSw) {
			changeStateTask = new AsyncTask<Void, Void, Void>() {

				@Override
				protected Void doInBackground(Void... params) {
					// Register on our server
					// On server creates a new user
					ServerSide.roomLight(getApplicationContext(), "bed_room",
							state);
					return null;
				}

				@Override
				protected void onPostExecute(Void result) {
					changeStateTask = null;
				}

			};
			changeStateTask.execute(null, null, null);
			Toast.makeText(this, Message + " Setting Bed room light " + state,
					Toast.LENGTH_LONG).show();

		}
		if (buttonView == outDoorSw) {

			changeStateTask = new AsyncTask<Void, Void, Void>() {

				@Override
				protected Void doInBackground(Void... params) {

					ServerSide.roomLight(context, "outdoor", state);
					return null;
				}

				@Override
				protected void onPostExecute(Void result) {
					changeStateTask = null;
				}

			};
			changeStateTask.execute(null, null, null);
			Toast.makeText(this, Message + " Setting Outdoor light " + state,
					Toast.LENGTH_LONG).show();
		}
	}
	protected void onPause() {
		if (tts != null) {
			tts.stop();
			tts.shutdown();
			super.onPause();
		}
	}
}
